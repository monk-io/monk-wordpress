namespace: monk-wordpress-nginx

db:
  defines: runnable

  variables:
    image-tag:
      type: string
      value: latest
    rpc-port:
      type: int
      value: 3306
    database_name:
      type: string
      env: MYSQL_DATABASE
      value: <- $mysql_database_name
    database_user:
      env: MYSQL_USER
      type: string
      value: <- $mysql_database_user
    mpassword:
      env: MYSQL_PASSWORD
      type: string
      value: <- $mysql_database_password
    database_root_password:
      env: MYSQL_ROOT_PASSWORD
      value: <- $mysql_database_root_password
      type: string
    wordpress_mysql_data:
      type: string
      value: wordpress-mysql

  containers:
    mysql:
      paths:
        - <- `${monk-volume-path}/${wordpress_mysql_data}:/var/lib/mysql`
      ports:
        - <- `0.0.0.0:${rpc-port}:3306`
      image-tag: <- `${image-tag}`
      image: mysql

  services:
    mysql-svc:
      container: mysql
      port: 3306
      protocol: tcp

wordpress:
  defines: runnable

  connections:
    db:
      runnable: monk-wordpress-nginx/db
      service: mysql-svc

  containers:
    wp:
      image: wordpress
      paths:
        - <- `${wordpress-data-path}:/var/www/html`
      ports:
        - <- `${server-port}:80`

  depends:
    wait-for:
      runnables:
        - monk-wordpress-nginx/db
      timeout: 30

  variables:
    wordpress-db-user:
      type: string
      env: WORDPRESS_DB_USER
      value: <- $mysql_database_user
    WORDPRESS_DB_PASSWORD:
      env: WORDPRESS_DB_PASSWORD
      type: string
      value: <- $mysql_database_password
    wordpress-db-name:
      env: WORDPRESS_DB_NAME
      type: string
      value: <- $mysql_database_name
    wordpress-db-host:
      env: WORDPRESS_DB_HOST
      type: string
      value: <- connection-hostname("db") split(".dns.podman") join("")
    wordpress-data-path:
      type: string
      value: <- `${monk-volume-path}/wordpress/web`
    server-port:
      type: int
      value: <- $wordpress_port

  services:
    wordpress-svc:
      container: wp
      port: 80
      protocol: tcp
      host-port: <- `${server-port}` to-i


nginx:
  defines: runnable
  inherits: nginx

  connections:
    wordpress:
      runnable: monk-wordpress-nginx/wordpress
      service: wordpress-svc

  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          server_name {{ v "server-name" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:{{ v "proxy-target-port" }};
          }
        }
      mode: 511
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy

  containers:
    nginx-reverse-proxy:
      image-tag: latest
      image: docker.io/bitnami/nginx
      ports:
      - <- `0.0.0.0:${listen-port}:${listen-port}/tcp`

  variables:
    proxy-target-host:
      value: <- connection-hostname("wordpress") split(".dns.podman") join("")
      type: string
    listen-port:
      value: "80"
      type: string
    server-name:
      value: <- $server_name
      type: string
    proxy-target-port:
      type: string
      value: 80

  services:
    nginx-svc:
      container: nginx-reverse-proxy
      port: <- `${listen-port}`
      protocol: tcp
      host-port: <- `${listen-port}` to-i
