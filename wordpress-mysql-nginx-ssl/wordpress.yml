namespace: wordpress-nginx-ssl

db: 
  metadata:
    private: true
  defines: runnable

  variables:
    image-tag:
      type: string
      value: latest
    rpc-port:
      type: int
      value: 3306
    database_name:
      type: string
      env: MYSQL_DATABASE
      value: <- $mysql_database_name
    database_user:
      env: MYSQL_USER
      type: string
      value: <- $mysql_database_user
    mpassword:
      env: MYSQL_PASSWORD
      type: string
      value: <- $mysql_database_password
    database_root_password:
      env: MYSQL_ROOT_PASSWORD
      value: <- $mysql_database_root_password
      type: string
    wordpress_mysql_data:
      type: string
      value: wordpress-mysql

  containers:
    mysql:
      paths:
        - <- `${monk-volume-path}/${wordpress_mysql_data}:/var/lib/mysql`
      ports:
        - <- `0.0.0.0:${rpc-port}:3306`
      image-tag: <- `${image-tag}`
      image: mysql
  services:
    mysql-svc:
      container: mysql
      port: 3306
      protocol: tcp

wordpress:
  metadata:
    private: true
    
  defines: runnable

  connections:
    db:
      runnable: wordpress-mysql-nginx/db
      service: mysql-svc

  containers:
    wp:
      image: wordpress
      paths:
        - <- `${wordpress-data-path}:/var/www/html`
      ports:
        - 8088:80
        - 443

  depends:
    wait-for:
      runnables:
        - wordpress-nginx-ssl/db
      timeout: 30

  variables:
    wordpress-db-user:
      type: string
      env: WORDPRESS_DB_USER
      value: <- $mysql_database_user
    WORDPRESS_DB_PASSWORD:
      env: WORDPRESS_DB_PASSWORD
      type: string
      value: <- $mysql_database_password
    wordpress-db-name:
      env: WORDPRESS_DB_NAME
      type: string
      value: <- $mysql_database_name
    wordpress-db-host:
      env: WORDPRESS_DB_HOST
      type: string
      value: <- connection-hostname("db") split(".dns.podman") join("")
    wordpress-data-path:
      type: string
      value: <- `${monk-volume-path}/wordpress/web`
  
  services:
    wordpress-svc:
      container: wp
      port: 80
      protocol: tcp
      host-port: 8088

wp-nginx:
  metadata:
    private: true
  defines: runnable
  inherits: nginx/ssl

  connections:
    wordpress:
      runnable: wordpress-mysql-nginx/wordpress
      service: wordpress-svc

  variables:
    proxy-pass-protocol:
      type: string
      value: http
    proxy-pass-port:
      value: 80
      type: int
    proxy-pass-url:
      value: <- connection-hostname("wordpress") split(".dns.podman") join("")
      type: string
    admin-email:
      value: <- $email
      type: string
    ssl:
      env: USE_CERTBOT
      type: bool
      value: true
    server-name:
      type: string
      value: <- $server_name
    email:
      type: string
      value: do-not-reply@burakhan.com
    domain:
      type: string
      value: wordpress.burakhan.com

  files:
    server-def:
      mode: 511
      contents: |
        server {
          listen 80;
          server_name {{ v "server-name" }} www.{{ v "server-name" }};
          {{ if v "ssl" }}
            location /.well-known/acme-challenge/ {
              root /var/www/certbot;
            }
          {{ end }}
          location / {
          {{ if v "ssl" }}
            return 301 https://{{ v "server-name" }}$request_uri;
          {{ else }}
            proxy_pass {{ v "proxy-pass-protocol" }}://{{ v "proxy-pass-url"}}:{{ v "proxy-pass-port" }};
            proxy_pass_request_headers on;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
          {{ end }}
          }
        }

        {{ if v "ssl" }}
        server {
          listen 443 ssl http2;

          ssl_certificate     /etc/letsencrypt/live/{{ v "domain" }}/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/{{ v "domain" }}/privkey.pem;
          server_name {{ v "domain" }};

          root /usr/share/nginx/html/;
          index index.php index.html index.htm;

 
          location / {
            proxy_pass {{ v "proxy-pass-protocol" }}://{{ v "proxy-pass-url" }}:{{ v "proxy-pass-port" }};
            proxy_pass_request_headers on;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
          }
        }
        {{ end }}
      container: nginx
      path: /etc/nginx/conf.d/default.conf
  version: 1.15-alpine
